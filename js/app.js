
	// Строгий режим 
	"use strict";

	// Задача №1
	// Що потрапить в консоль?

	// let someVar = 0;
	// ++someVar;

	// if (someVar) {
	// 	console.log(someVar);
	// }

	// Задача №2
	// За допомогою циклу FOR виведіть в консоль 10 рядків:
	// Пункт №1
	// Пункт №2
	// і т.д.

	// Задача №3
	// Що потрапить в консоль ?
	// if (2 * 20 <= 10 || 30 / 2 < 5 && 10 <= "10" || 20 === "20") {
	// 	console.log('000');
	// }

	// Задача №4
	// Створіть функцію, яка повертає результат ділення числа a на число b з додаванням рядка "Результат ділення: "
	// Викличте функцію передаючі різні значення, у тому числі не передаючи зовсім.
	// Функція не має повертати NaN, Infinite або помилку

	// Задача №5
	// Створіть масив даних - 5 елементів, один з яких число 10
	// Обробіть масив за допомогою методу перебору
	// Перевіряйте елемент на відповідність числу 10, та у разі відповідності, виводьте в консоль

	//  ДЗ 24
	// Задача №1
	let someVar = 0;
	++someVar; //дабвиться то змінної +1

	if (someVar) {
	// умова виконається тому що дабвиться то змінної +1 \\someVar = 1
	console.log(someVar); // 1;
	}

	// Задача №2
	for (let index = 0; index < 10; index++) {
	console.log("Пункт № " + index);
	}

	// Задача №3
	if (2 * 20 <= 10 || 30 / 2 < 5 && 10 <= "10" || 20 === "20") {
		console.log('000');
	}

	// if (false || false && true || false) {
	// 	console.log('000');
	// }

	// if (false || false || false) {
	// 	console.log('000');
	// }

	// в консоль нічого не попаде

	// Задача №4


	function numResult(a, b) {
		let res;
		if ( !isNaN(parseInt(a)) && !isNaN(parseInt(b)) && b !== 0) {
			res = a / b;
			console.log(res);
			
			return res;
		} else {
			console.log( "пробач але мені потрібні числа для роботи. ось приклад: numResult( 10,5 )");
		}

	}
	numResult(10, "2")
	// numResult("10", 5);

	// Задача №5
	let array = ["Коля", 10, 15, true,  { age : 27 }]

	array.forEach((element, index) => {
		element === 10 ? console.log(array[index]): null
	});
